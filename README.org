** FEST
FEST - Ruby-адаптер, использующий [[https://wiki.archlinux.org/index.php/Festival_%28%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9%29][Festival]], для озвучки текста и скриптов...
** Установка
#+begin_src ruby
# Gemfile
gem 'fest'
#+end_src
или
#+begin_src ruby
$ gem install fest
#+end_src
** Использование
***** Вызов методов
#+begin_src ruby
# Подключаем
require 'fest'

@fest = Fest.new
text = "Пример"
@fest.say(text)
# => Произнесёт "Пример"

# Расширенный вариант
params = {"lang" = "(cmu_us_slt_arctic_hts)", "volume" => 60}
text = "This is an example"
@fest.say(text, params)
# => Произнесёт "This is an example" поставив 60% громкости...

# Все параметры
# params || default value
params[:data] || "/tmp"
params[:volume] || 70
params[:sound] || "alsa"
params[:lang] || "(voice_msu_ru_nsh_clunits)"

# Кастомизация

@fest.init(params={})
# Узнает текущую громкость... @data, @i ...

@fest.check_light # (with xbacklight)
# Проверяет яркость не равна ли нулю... если равна выходит...
# Можно сделать свою проверку ...

@fest.check_say_wav
# Проверяем на max @i ... если нету @i = 1 ...
# Требуется чтобы сообщения не затирались до проигрывания...

@fest.make_wav(text)
# Создаём wav с определённым языком ... с учётом @i...

@fest.set_volume(params={})
# Ставит оптимальную громкость с учётом звуковой системы...

@fest.expect_if_aplay_now
# Ожидает, если проигрывается сообщение ...

@fest.play_wav
# Проигрывает wav ...

@fest.return_current_volume(params={})
# Возращает громкость до проигрывания ...

@fest.delete_wav
# Удаляет проигранный файл ...
# Можно заменить ... или убрать...

# Склонение
num = 2
arr = ["Сообщение", "Сообщения", "Сообщений"]
text = @fest.pluraform(num, arr)
puts text
# => "Сообщения"


#+end_src
